(fset 'var
   [?\C-s ?= ?\C-m right ?( ?V ?a ?r ?i ?a ?b ?l ?e ?* ?  ?) down ?\C-a ?\C-x ?\C-s])
(fset 'sc
   [right right ?\C-  ?\C-s ?  ?\C-m ?\C-x ?\C-x escape ?w ?\C-s ?= ?\C-m right ?( ?\C-y backspace ?* ?  ?) ?\C-s ?s ?c ?\C-m left left ?( ?C ?o ?n ?t ?r ?o ?l ?P ?r ?o ?g ?  ?* ?) ?\C-s ?, ?\C-m right return tab ?\C-x ?\C-s])

(fset 'cp
   [right right ?\C-  ?\C-s ?  ?\C-m ?\C-x ?\C-x escape ?w ?\C-s ?= ?\C-m right ?( ?\C-y backspace ?* ?  ?) ?\C-s ?/ ?* ?\C-m escape ?q ?\C-x ?\C-s down ?\C-a])
(fset 'rdef
   [?\C-  ?\C-s ?  ?\C-m ?\C-x ?\C-x escape ?w ?\C-s ?= ?\C-m right ?( ?\C-y backspace ?* ?  ?) down ?\C-a ?\C-x ?\C-s])
(fset 'li
   [?\C-s ?D ?O ?U ?B ?L ?E ?\C-m left left left left left left ?( ?l ?o ?n ?g ?  ?i ?n ?t ?) ?( ?\C-s ?\; ?\C-m left ?) down ?\C-a])

(fset 'netr
   [?\C-s ?N ?E ?T ?_ ?\C-m ?\C-a return up ?# ?i ?f ?d ?e ?f ?  ?_ ?G ?P ?P down ?\C-a ?\C-s ?N ?E ?T ?\C-m left left left ?\C-a ?\C-k ?\C-y ?\C-r ?N ?E ?T ?\C-m left right ?N ?e ?t ?R ?e ?a ?d ?S ?t ?r ?: ?: ?\C-e return ?# ?e ?l ?s ?e return ?\C-y return ?# ?e ?n ?d ?i ?f down ?\C-a])
(fset 'nets
   [?\C-s ?N ?E ?T ?_ ?\C-m ?\C-a return up ?# ?i ?f ?d ?e ?f ?  ?_ ?G ?P ?P down ?\C-a ?\C-s ?N ?E ?T ?\C-m left left left ?\C-a ?\C-k ?\C-y ?\C-r ?N ?E ?T ?\C-m left right ?N ?e ?t ?S ?e ?n ?d ?S ?t ?r ?: ?: ?\C-e return ?# ?e ?l ?s ?e return ?\C-y return ?# ?e ?n ?d ?i ?f down ?\C-a])
(fset 'deltype
   [?\C-s ?d ?e ?l ?\C-m right ?\C-  ?\C-s ?( ?\C-m left ?\C-x ?\C-x escape ?w ?\C-r ?d ?e ?l ?\C-m ?( ?\C-y ?* ?  ?) down ?\C-a])
